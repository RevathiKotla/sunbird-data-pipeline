{
  "type": "kafka",
  "dataSchema": {
    "dataSource": "tpd-hourly-rollup-syncts",
    "parser": {
      "type": "string",
      "parseSpec": {
        "format": "json",
        "flattenSpec": {
          "useFieldDiscovery": false,
          "fields": [
            {
              "type": "root",
              "name": "syncts"
            },
            {
              "type": "root",
              "name": "eid"
            },
            {
              "type": "path",
              "name": "collection_type",
              "expr": "$.collectiondata.contenttype"
            },
            {
              "type": "path",
              "name": "context_env",
              "expr": "$.context.env"
            },
            {
              "type": "path",
              "name": "edata_id",
              "expr": "$.edata.id"
            },
            {
              "type": "path",
              "name": "edata_mode",
              "expr": "$.edata.mode"
            },
            {
              "type": "path",
              "name": "edata_pageid",
              "expr": "$.edata.pageid"
            },
            {
              "type": "path",
              "name": "edata_type",
              "expr": "$.edata.type"
            },
            {
              "type": "path",
              "name": "object_rollup_l1",
              "expr": "$.object.rollup.l1"
            },
            {
              "type": "path",
              "name": "user_signin_type",
              "expr": "$.userdata.usersignintype"
            },
            {
              "type": "path",
              "name": "actor_id",
              "expr": "$.actor.id"
            },
            {
              "type": "path",
              "name": "context_did",
              "expr": "$.context.did"
            }
          ]
        },
        "dimensionsSpec": {
          "dimensions": [
            {
              "type": "root",
              "name": "eid"
            },
            {
              "type": "string",
              "name": "context_env"
            },
            {
              "type": "string",
              "name": "user_signin_type"
            },
            {
              "type": "string",
              "name": "collection_type"
            },
            {
              "type": "string",
              "name": "edata_id"
            },
            {
              "type": "string",
              "name": "edata_mode"
            },
            {
              "type": "string",
              "name": "edata_pageid"
            },
            {
              "type": "string",
              "name": "edata_type"
            },
            {
              "type":"string",
              "name": "first_time_user"
            }
          ]
        },
        "timestampSpec": {
          "column": "syncts",
          "format": "auto"
        }
      }
    },
    "transformSpec": {
      "transforms": [
        {
          "type": "expression",
          "name": "first_time_user  ",
          "expression": "if((\"context_cdata_type\" == 'FirstTimeUser') && \"context_cdata_id\" == 'true') , 'true','false')"
        },
        {
          "type": "expression",
          "name": "filter_pdata_id",
          "expression": "if((like(\"context_pdata_pid\",'%contentplayer%'), if ( \"eid\" == 'START', 'true','false') ,'true')"
        }
      ],
      "filter": {
        "type": "selector",
        "dimension": "filter_pdata_id",
        "value": "true"
      }
    },
    "metricsSpec": [
      {
        "name": "total_count",
        "type": "count"
      },
      {
        "type": "HLLSketchBuild",
        "name": "unique_devices",
        "fieldName": "dimensions_did"
      },
      {
        "type": "HLLSketchBuild",
        "name": "unique_users",
        "fieldName": "actor_id"
      }
    ],
    "granularitySpec": {
      "type": "uniform",
      "segmentGranularity": "hour",
      "queryGranularity": "hour",
      "rollup": true
    }
  },
  "ioConfig": {
    "topic": "{{env}}.druid.events.telemetry",
    "consumerProperties": {
      "bootstrap.servers": "{{kafka_brokers}}"
    },
    "taskCount": 1,
    "replicas": 1,
    "taskDuration": "PT14400S",
    "useEarliestOffset": true
  },
  "tuningConfig": {
    "type": "kafka",
    "reportParseExceptions": false,
    "logParseExceptions": true,
    "maxSavedParseExceptions": 10
  }
}
